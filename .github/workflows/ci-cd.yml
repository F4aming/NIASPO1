name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Триггер на пуш в ветку main
  pull_request:
    branches:
      - main  # Триггер на pull request в ветку main

jobs:
  test-docker-compose:
    runs-on: ubuntu-latest  # Используем Ubuntu для запуска

    steps:
      # Шаг 1: Клонировать репозиторий
      - name: Checkout code
        uses: actions/checkout@v3  # Получаем код из репозитория

      # Шаг 2: Установить Docker Buildx (опционально)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Устанавливаем Buildx (полезно для мультиархитектурных образов)
      
      # Шаг 3: Установить Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose  # Устанавливаем Docker Compose

      # Шаг 4: Собрать и запустить контейнеры через docker-compose
      - name: Build and start containers
        run: |
          docker-compose -f ./docker/docker-compose.yml up --build -d  # Строим и запускаем контейнеры в фоновом режиме

      # Шаг 5: Проверить состояние контейнеров
      - name: Check services health
        run: |
          docker-compose -f ./docker/docker-compose.yml ps || true  # Проверяем статус контейнеров

      # Шаг 6: Очистка ресурсов после тестов
      - name: Clean up
        if: always()  # Даже если шаги выше завершились с ошибкой, очистка произойдёт
        run: |
          docker-compose -f ./docker/docker-compose.yml down  # Останавливаем и удаляем контейнеры
